- name: Show project root
  debug:
    msg: "üóÇÔ∏è Project root is {{ project_root }}"

- name: Ensure Minikube is running
  shell: |
    minikube status || minikube start
  args:
    executable: /bin/bash

- name: Show Docker environment config for Minikube
  shell: minikube docker-env --shell bash
  register: docker_env_output

- name: Print Docker env output
  debug:
    var: docker_env_output.stdout_lines

- name: Parse Docker environment for Ansible
  set_fact:
    docker_env_vars: "{{ dict(docker_env_output.stdout | regex_findall('export ([^=]+)=\\\"([^\\\"]+)\\\"')) }}"

- name: Build Docker images inside Minikube
  shell: |
    docker build -t finalproject-backend "{{ project_root }}/backend"
    docker build -t finalproject-frontend "{{ project_root }}/frontend"
    docker build -t finalproject-ml-service "{{ project_root }}/ml_service"
    docker build -t finalproject-ml-service-retrain -f "{{ project_root }}/ml_service/Dockerfile.retrainer" "{{ project_root }}/ml_service"
  args:
    chdir: "{{ project_root }}"
    executable: /bin/bash
  environment: "{{ docker_env_vars }}"

- name: List Docker images after build
  shell: docker images
  register: docker_images
  environment: "{{ docker_env_vars }}"

- name: Show Docker images found
  debug:
    var: docker_images.stdout_lines

- name: Enable metrics-server addon in Minikube
  shell: minikube addons enable metrics-server
  args:
    executable: /bin/bash

- name: Enable ingress addon in Minikube
  shell: minikube addons enable ingress
  args:
    executable: /bin/bash

- name: Wait for ingress-nginx-controller pod to be ready
  shell: |
    kubectl wait --namespace ingress-nginx \
      --for=condition=ready pod \
      --selector=app.kubernetes.io/component=controller \
      --timeout=180s
  args:
    executable: /bin/bash

- name: Apply Kubernetes Manifests (ELK + Core Services + HPA + Ingress)
  shell: |
    kubectl apply -f k8s/elk/logstash-configmap.yaml
    kubectl apply -f k8s/elk/elasticsearch-deployment.yaml
    kubectl apply -f k8s/elk/kibana-deployment.yaml
    kubectl apply -f k8s/elk/logstash-deployment.yaml

    kubectl apply -f k8s/backend-deployment.yaml
    kubectl apply -f k8s/frontend-deployment.yaml
    kubectl apply -f k8s/mlservice-deployment.yaml
    kubectl apply -f k8s/retrainer-deployment.yaml

    kubectl apply -f k8s/backend-hpa.yaml
    kubectl apply -f k8s/mlservice-hpa.yaml

    kubectl apply -f k8s/ingress.yaml
  args:
    chdir: "{{ project_root }}"
    executable: /bin/bash

- name: Wait for all pods to be ready
  shell: kubectl wait --for=condition=Ready pods --all --timeout=500s
  args:
    executable: /bin/bash
