version: "3.9"

services:
  backend:
    build:
      context: ./backend
    container_name: flask-backend
    ports:
      - "5000:5000"
    restart: always
    volumes:
      - flask_logs:/app/logs
    depends_on:
      - logstash
      - ml-service
      
  ml-service:
    build:
      context: ./ml_service
    container_name: ml-service
    ports:
      - "6000:6000"
    restart: always

  frontend:
    build:
      context: ./frontend
    container_name: react-frontend
    ports:
      - "3000:80"
    restart: always
    depends_on:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    healthcheck:
      test: curl -s http://localhost:9200 || exit 1
      interval: 10s
      timeout: 5s
      retries: 30
    # this only checks if ES is up, not full cluster status

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    volumes:
      - ./elk/logstash:/usr/share/logstash/pipeline
      - flask_logs:/usr/share/logstash/logs
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5044:5000"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  flask_logs:
